{"version":3,"file":"utils-21f1601d.js","sources":["../../node_modules/.pnpm/virtual-dom-nodes@0.2.0/node_modules/virtual-dom-nodes/dist/dom-node-safe-guards.js","../../node_modules/.pnpm/virtual-dom-nodes@0.2.0/node_modules/virtual-dom-nodes/dist/html-to-element.js","../../node_modules/.pnpm/virtual-dom-nodes@0.2.0/node_modules/virtual-dom-nodes/dist/update.js","../../.storybook/utils.ts"],"sourcesContent":["export function isElement(node) {\n    return node != null && node.nodeType === Node.ELEMENT_NODE;\n}\nexport function isTextNode(node) {\n    return node != null && node.nodeType === Node.TEXT_NODE;\n}\n","import { isElement } from './dom-node-safe-guards.js';\n/**\n * Create `Element` from HTML string\n */\nexport function htmlToElement(html) {\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = trimWhitespace(html);\n    if (wrapper.childNodes.length > 1) {\n        // As given html created multiple nodes, we'll just return a div\n        // wrapper with given nodes as children.\n        return wrapper;\n    }\n    const element = wrapper.firstElementChild;\n    if (!isElement(element)) {\n        // As given html did not create an element, we'll just return a div\n        // wrapper with given HTML as innerHTML (= text content).\n        return wrapper;\n    }\n    return element;\n}\nconst MULTIPLE_SPACES_REGEXP = / {2,}/g;\nconst MULTIPLE_NEWLINES_REGEXP = /\\n+/g;\nconst LEADING_WHITESPACE_REGEXP = /\\n {1,}/g;\nconst TRAILING_WHITESPACE_REGEXP = / {1,}\\n/g;\nconst NEWLINE_REGEXP = /\\n/g;\nfunction trimWhitespace(text) {\n    return text\n        .replace(MULTIPLE_SPACES_REGEXP, ' ')\n        .replace(MULTIPLE_NEWLINES_REGEXP, '\\n')\n        .replace(LEADING_WHITESPACE_REGEXP, '\\n')\n        .replace(TRAILING_WHITESPACE_REGEXP, '\\n')\n        .replace(NEWLINE_REGEXP, '')\n        .trim();\n}\n","import { isElement, isTextNode } from './dom-node-safe-guards.js';\nimport { htmlToElement } from './html-to-element.js';\n/**\n * Apply changes of `Node` or HTML string to given `Node` optimally.\n */\nexport function update(current, nextNodeOrHtml) {\n    var _a;\n    const isString = typeof nextNodeOrHtml === 'string';\n    if (nextNodeOrHtml == null || (isString && nextNodeOrHtml.length === 0)) {\n        // Unmount node, if possible\n        (_a = current.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(current);\n        return;\n    }\n    const nextNode = isString ? htmlToElement(nextNodeOrHtml) : nextNodeOrHtml;\n    return updateNode(current, nextNode);\n}\nfunction updateNode(current, next) {\n    if (shouldUpdateWholeNode(current, next)) {\n        // No need to traverse children\n        return updateWholeNode(current, next);\n    }\n    const childrenToAdd = Array.from(next.childNodes).slice(current.childNodes.length);\n    const childrenToRemove = [];\n    // TODO: If order of nodes changes they are currently completely re-created.\n    // This could be optimized to preserve nodes and respect their order.\n    current.childNodes.forEach((currentChild, index) => {\n        const nextChild = next.childNodes[index];\n        if (!nextChild) {\n            return childrenToRemove.push(currentChild);\n        }\n        if (currentChild.hasChildNodes() || nextChild.hasChildNodes()) {\n            updateNode(currentChild, nextChild);\n        }\n        if (isTextNode(currentChild) && isTextNode(nextChild)) {\n            if (currentChild.textContent !== nextChild.textContent) {\n                currentChild.textContent = nextChild.textContent;\n            }\n        }\n    });\n    childrenToRemove.forEach(current.removeChild.bind(current));\n    childrenToAdd.forEach(current.appendChild.bind(current));\n    // Update attributes\n    if (isElement(current)) {\n        const currentAttributes = getAttributes(current);\n        const nextAttributes = getAttributes(next);\n        const nextIsElement = isElement(next);\n        for (const { key, value } of nextAttributes) {\n            // Update changed attributes and add new attributes\n            if (current.getAttribute(key) !== value) {\n                current.setAttribute(key, value);\n            }\n        }\n        for (const { key } of currentAttributes) {\n            if (nextIsElement) {\n                // Remove missing attributes\n                if (!next.hasAttribute(key)) {\n                    current.removeAttribute(key);\n                }\n            }\n        }\n    }\n}\nfunction getAttributes(node) {\n    if (!isElement(node))\n        return [];\n    return node\n        .getAttributeNames()\n        .reduce((all, key) => [\n        ...all,\n        { key, value: node.getAttribute(key) || '' },\n    ], []);\n}\nfunction shouldUpdateWholeNode(current, next) {\n    // Node type has changed, e.g. Element -> TextNode\n    if (current.nodeType !== next.nodeType) {\n        return true;\n    }\n    // Node type has changed, e.g. <div> -> <span>\n    if (isElement(current) && isElement(next)) {\n        return current.tagName !== next.tagName;\n    }\n    // At this point both nodes at TextNodes\n    return current.textContent !== next.textContent;\n}\nfunction updateWholeNode(current, next) {\n    // Previous element can be completely replaced with new node\n    if (isElement(current)) {\n        current.replaceWith(next);\n    }\n    // Previous text node can be replaced with new text\n    else if (isTextNode(current) && isTextNode(next)) {\n        current.textContent = next.textContent;\n    }\n    // Previous text node can be replaced with new node\n    else if (isTextNode(current) && isElement(next)) {\n        if (current.parentElement) {\n            current.parentElement.replaceChild(next, current);\n        }\n        else {\n            console.warn(`Unexpected case, missing parentElement: ${current}`);\n        }\n    }\n    else {\n        console.warn([\n            'Unexpected case:',\n            `isElement(current): ${isElement(current)}`,\n            `isTextNode(current): ${isTextNode(current)}`,\n            `isElement(next): ${isElement(next)}`,\n            `isTextNode(next): ${isTextNode(next)}`,\n        ].join(' '));\n    }\n}\n","import { htmlToElement, update } from 'virtual-dom-nodes';\n\nexport function createMountToggle(\n    unmountedState: string,\n    mountedState: string\n) {\n    const button = document.createElement('button');\n    button.textContent = 'Mount';\n\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(button);\n    wrapper.appendChild(htmlToElement(unmountedState));\n\n    let toggled = false;\n    button.addEventListener('click', () => {\n        const lastChild = wrapper.lastChild;\n        if (!lastChild) throw new Error('wrapper missing lastChild');\n\n        update(lastChild, toggled ? unmountedState : mountedState);\n\n        toggled = !toggled;\n        SourceCodeUpdateEvents.emit(undefined);\n    });\n\n    return wrapper;\n}\n\nexport function createButtonCycle(\n    ...onClicks: ((wrapper: HTMLElement) => void)[]\n) {\n    const button = document.createElement('button');\n    button.textContent = 'Next state';\n\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(button);\n\n    function cleanWrapper() {\n        for (const child of wrapper.childNodes) {\n            if (child !== button) {\n                wrapper.removeChild(child);\n            }\n        }\n    }\n\n    const maxIndex = onClicks.length;\n    let index = 0;\n\n    button.addEventListener('click', () => {\n        if (index === maxIndex) {\n            cleanWrapper();\n            index = 0;\n        } else {\n            onClicks[index](wrapper);\n            index++;\n        }\n\n        SourceCodeUpdateEvents.emit(undefined);\n    });\n\n    return wrapper;\n}\n\ntype Subscriber<T> = (event: T) => void;\nclass EventBus<EventType = undefined> {\n    subscribers: Subscriber<EventType>[] = [];\n    events: EventType[] = [];\n\n    on(subscriber: Subscriber<EventType>) {\n        this.subscribers.push(subscriber);\n        this.events.forEach(subscriber);\n    }\n\n    off(subscriber: Subscriber<EventType>) {\n        this.subscribers = this.subscribers.filter(s => s !== subscriber);\n    }\n\n    emit(event: EventType) {\n        this.subscribers.forEach(subscriber => subscriber(event));\n        this.events.push(event);\n    }\n\n    clear() {\n        this.events = [];\n    }\n}\n\nexport const SourceCodeUpdateEvents = new EventBus();\n\nexport const AnnouncementEvents = new EventBus<{\n    text: string;\n    level: string;\n}>();\n\nexport function times(count: number) {\n    return function execute(method: () => unknown): void {\n        Array(count).fill(null).forEach(method);\n    };\n}\n"],"names":["isElement","node","__name","isTextNode","htmlToElement","html","wrapper","trimWhitespace","element","MULTIPLE_SPACES_REGEXP","MULTIPLE_NEWLINES_REGEXP","LEADING_WHITESPACE_REGEXP","TRAILING_WHITESPACE_REGEXP","NEWLINE_REGEXP","text","update","current","nextNodeOrHtml","_a","isString","nextNode","updateNode","next","shouldUpdateWholeNode","updateWholeNode","childrenToAdd","childrenToRemove","currentChild","index","nextChild","currentAttributes","getAttributes","nextAttributes","nextIsElement","key","value","all","createMountToggle","unmountedState","mountedState","button","toggled","lastChild","SourceCodeUpdateEvents","createButtonCycle","onClicks","cleanWrapper","child","maxIndex","EventBus","subscriber","s","event","AnnouncementEvents","times","count","method"],"mappings":"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","x_google_ignoreList":[0,1,2]}